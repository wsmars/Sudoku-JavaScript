{"version":3,"sources":["webpack/bootstrap be9caf56372cb296cb8e","./js/main.js","./js/sudoku-view.js","./lib/game.js","./lib/board.js","./lib/nodeTree.js","./lib/clock.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;;;;;;ACND;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AClPA;;AAEA;AACA;AACA;AACA,mCAAkC;AAClC,2CAA0C;AAC1C;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAiB,WAAW,OAAO;AACnC;AACA,oBAAmB,gBAAgB;AACnC;AACA;AACA;AACA,6DAA4D;AAC5D;AACA;AACA;AACA;AACA,kBAAiB,aAAa,OAAO;AACrC;AACA;AACA;AACA;AACA;AACA,kBAAiB,aAAa,OAAO;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,OAAO;AACxB,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,kBAAiB,OAAO,OAAO;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,kBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAsB,GAAG;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC/JA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAoB,GAAG;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAwB,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACxHA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA0C,eAAe;AACzD;;AAEA;AACA;;AAEA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap be9caf56372cb296cb8e\n **/","var View = require('./sudoku-view');\n\n$(function () {\n  var $sudoku = $(\".sudoku\");\n  var $board = $(\".board\");\n  new View($sudoku, $board);\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.js\n ** module id = 0\n ** module chunks = 0\n **/","var Game = require(\"../lib/game\");\nvar Clock = require(\"../lib/clock\");\n\nfunction View ($sudoku, $board) {\n  this.$sudoku = $sudoku;\n  this.$board = $board;\n  this.addMainMenu();\n  this.bindEvents();\n}\n\nView.prototype.addMainMenu = function () {\n  var $ol = $(\"<ol>\");\n  $ol.append(\"<h4>Instruction:</h4>\");\n  $ol.append(\"<li>Choose level to start game.</li>\");\n  $ol.append(\"<li>The Timer will run once the game started.</li>\");\n  $ol.append(\"<li>Selecet an empty box to fill in a number.</li>\");\n  $ol.append(\"<li>The number can only be from 1 to 9.</li>\");\n  $ol.append(\"<li>Any row, column, 3x3 box can only contain same number once.</li>\");\n  $ol.append(\"<li>After all boxes filled, click \\\"Submit\\\" button to check result.</li>\");\n  $ol.append(\"<li>Click \\\"Back\\\" return to main menu.</li>\");\n  $ol.append(\"<li>Have Fun!</li>\");\n\n  var $demoBtn = $(\"<button>\");\n  $demoBtn.attr(\"id\", \"demo-btn\");\n  $demoBtn.append(\"Demo Mode\");\n  $demoBtn.addClass(\"level-btn\");\n\n  var $easyBtn = $(\"<button>\");\n  $easyBtn.attr(\"id\", \"easy-btn\");\n  $easyBtn.append(\"Easy Mode\");\n  $easyBtn.addClass(\"level-btn\");\n\n  var $middleBtn = $(\"<button>\");\n  $middleBtn.attr(\"id\", \"middle-btn\");\n  $middleBtn.append(\"Medium Mode\");\n  $middleBtn.addClass(\"level-btn\");\n\n  var $hardBtn = $(\"<button>\");\n  $hardBtn.attr(\"id\", \"hard-btn\");\n  $hardBtn.append(\"Hard Mode\");\n  $hardBtn.addClass(\"level-btn\");\n\n  var $container = $(\"<div>\");\n  $container.addClass(\"btn-container\");\n  $container.append($demoBtn);\n  $container.append($easyBtn);\n  $container.append($middleBtn);\n  $container.append($hardBtn);\n\n  this.$board.append($ol);\n  this.$board.append($container);\n};\n\nView.prototype.bindEvents = function () {\n  var that = this;\n\n  $(\"#easy-btn\").click(function (){\n    that.startGame(2);\n  });\n\n  $(\"#middle-btn\").click(function (){\n    that.startGame(3);\n  });\n\n  $(\"#hard-btn\").click(function (){\n    that.startGame(4);\n  });\n\n  $(\"#demo-btn\").click(function (){\n    that.startGame(1);\n  });\n};\n\nView.prototype.startGame = function (level) {\n  var that = this;\n  clearTimeout(window.timeOut);\n  $(\".grid\").remove();\n  $(\".loading\").remove();\n  if (this.clock) {\n    this.clock.stopClock();\n  }\n  var $div = $(\"<div>\");\n  $div.addClass(\"loading\");\n  $div.append(\"Loading...\");\n  this.$board.html($div);\n  window.timeOut = setTimeout(function() {\n    $(\".loading\").text(\"\");\n    that.createGame(level);\n  }, 1000);\n};\n\nView.prototype.createGame = function (level) {\n  this.game = new Game(level);\n  this.clock = new Clock();\n\n  var $container = $(\"<div>\");\n  $container.addClass(\"table-container\");\n  this.$board.html($container);\n\n  this.setupTable(this.game);\n  this.setupClock(this.clock);\n  this.clock.tick();\n  \n  this.setupReturnBtn();\n  this.setupSubmitBtn();\n};\n\nView.prototype.setupTable = function (game) {\n  var $table = $(\"<table>\");\n  $table.addClass(\"grid\");\n\n  var $input = {};\n  var $row = {};\n  var $entry = {};\n\n  var boardArray = game.boardArray;\n  var k;\n  for (var i = 0; i < 9; i++) {\n    $row[i] = $(\"<tr>\");\n    for (var j = 0; j < 9; j++) {\n      k = (i*9) + j;\n      $entry[k] = $(\"<td>\");\n      if (boardArray[k].val) {\n        $entry[k].append(boardArray[k].val);\n      }\n      else {\n        $input[k] = $(\"<input>\");\n        $input[k].attr(\"type\",\"number\");\n        $input[k].data(\"pos\", [i,j]);\n        $entry[k].append($input[k]);\n      }\n      $row[i].append($entry[k]);\n    }\n    $table.append($row[i]);\n  }\n  $(\"table\").remove(\".grid\");\n\n  var $div = $(\"<div>\");\n  $div.addClass(\"clock-out-container\");\n\n  $(\".table-container\").append($div);\n  $(\".table-container\").append($table);\n\n  var $width = $(\"table\").css(\"width\");\n  $(\".clock-out-container\").css(\"width\", $width);\n};\n\nView.prototype.setupClock = function (clock) {\n  var $div = $(\"<div>\");\n  $div.addClass(\"clock-container\");\n\n  var $h3 = $(\"<h3>\");\n  var $h4 = $(\"<h4>\");\n\n  $h4.attr('id', 'clock');\n\n  $h3.append(\"Time: \")\n  $h4.append(clock);\n\n  $div.append($h3);\n  $div.append($h4);\n  $(\".clock-out-container\").append($div);\n};\n\nView.prototype.setupReturnBtn = function () {\n  var that = this;\n  var $returnBtn = $(\"<button>\");\n  var $div = $(\"<div>\");\n\n  $div.addClass(\"table-btn-container\");\n  $returnBtn.attr(\"id\", \"return-btn\");\n  $returnBtn.append(\"Back\");\n  $returnBtn.addClass(\"return-btn\");\n  $div.append($returnBtn);\n  $(\".table-container\").append($div);\n\n  $(\"#return-btn\").click(function (){\n    if (that.clock) {\n      that.clock.stopClock();\n    }\n    $(\"div\").remove(\".table-container\");\n    $(\"div\").remove(\".btn-container\");\n    var $sudoku = $(\".sudoku\");\n    var $board = $(\".board\");\n    new View($sudoku, $board);\n  });\n};\n\nView.prototype.setupSubmitBtn = function () {\n  var that = this;\n  var $submitBtn = $(\"<button>\");\n\n  $submitBtn.attr(\"id\", \"submit-btn\");\n  $submitBtn.append(\"Submit\");\n  $submitBtn.addClass(\"submit-btn\");\n  $(\".table-btn-container\").append($submitBtn);\n\n  $(\"#submit-btn\").click(function (){\n    that.handleSubmit();\n  });\n};\n\nView.prototype.handleSubmit = function () {\n  var isOver = this.game.isOver();\n  var winYet = this.game.winYet();\n  if (isOver && winYet) {\n    this.clock.stopClock();\n    this.clock.parse();\n    $(\".submit-btn\").remove();\n    this.popUpMessage(\"Congradulations! You Win!\");\n  }\n  else if (isOver && !winYet) {\n    this.game.notWinYet(this.popUpMessage.bind(this));\n  }\n  else {\n    this.popUpMessage(\"Not finish yet!\");\n  }\n};\n\nView.prototype.popUpMessage = function (message) {\n  var that = this;\n  var $div = $(\"<div>\");\n  var $h3 = $(\"<h3>\");\n  var $btn = $(\"<button>\");\n  $div.addClass(\"message-container\");\n  $h3.addClass(\"message\");\n  $btn.addClass(\"message-btn\");\n  $h3.append(message);\n  $div.append($h3);\n\n  $btn.click(function (){\n    that.removeMessage()\n  });\n  $(\"body\").append($div);\n  $(\"body\").append($btn);\n};\n\nView.prototype.removeMessage = function () {\n  $(\"div\").remove(\".message-container\");\n  $(\"button\").remove(\".message-btn\");\n};\n\nmodule.exports = View;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/sudoku-view.js\n ** module id = 1\n ** module chunks = 0\n **/","var Board = require('./board');\n\nfunction Game (level) {\n  this.board = new Board();\n  var last = this.board.createFirstRow();\n  this.board.createRestNode(last); //create a board\n  this.boardArray = this.board.boardArray; // put every node from pos [0,0], [0,1],..., [8,8] in an array\n  this.result = this.setResult();\n  this.startGame(level);\n}\n\nGame.prototype.setResult = function () {\n  var result = [];\n  for (var i = 0; i < 81; i++) {\n    result.push(this.boardArray[i].val);\n  }\n  return result;\n};\n\nGame.prototype.startGame = function (level) {\n  if (level === 2) {\n    this.easyMode();\n  }\n  else if (level === 3) {\n    this.middleMode();\n  }\n  else if (level === 4) {\n    this.hardMode();\n  }\n  else if (level === 1) {\n    this.demoMode();\n  }\n};\n\nGame.prototype.demoMode = function () {\n  var cellOne = getRandomInt(0,80);\n  var cellTwo = getRandomInt(0,80);\n  this.boardArray[cellOne].val = null;\n  this.boardArray[cellTwo].val = null;\n};\n\nGame.prototype.easyMode = function () {\n  this.cellRemove(2);\n};\n\nGame.prototype.middleMode = function () {\n  this.cellRemove(3);\n};\n\nGame.prototype.hardMode = function () {\n  this.cellRemove(4);\n};\n\nGame.prototype.cellRemove = function (level) {\n  var pos = [];\n  var rowTemp;\n  var colTemp;\n\n  for (var i = 0; i < level; i++) { //remove row 0 ~ 2 & 6 ~ 8\n    pos = this.blockPosToRemove();\n    for (var j = 0; j < pos.length; j++) {\n      rowTemp = pos[j][0];\n      colTemp = pos[j][1] + i * 3;\n      this.boardArray[rowTemp*9+colTemp].val = null;\n      this.boardArray[(8-rowTemp)*9+(8-colTemp)].val = null; // mirror remove;\n    }\n  }\n  var f = [0,1,2,3,4,5,6,7,8];\n  shuffle(f);\n  for (var n = 0; n < 2+level; n++) { // remove row 3 & 5\n    colTemp = f[n];\n    this.boardArray[3*9+colTemp].val = null;\n    this.boardArray[5*9+(8-colTemp)].val = null;\n  }\n  shuffle(f);\n  for (var n = 0; n < 2+level; n++) { // remove row 4\n    colTemp = f[n];\n    this.boardArray[4*9+colTemp].val = null;\n  }\n};\n\nGame.prototype.blockPosToRemove = function() {\n  var ary = [];\n  for (var i = 0; i < 3; i++) {\n    for (var j = 0; j < 3; j++) {\n      ary.push([i, j]);\n    }\n  }\n  shuffle(ary);\n  for (var k = 0; k < 5; k++) { // k is bigger, the game is easier\n    ary.pop();\n  }\n  return ary;\n};\n\nGame.prototype.isOver = function () {\n  var pos, value, i;\n  var boardArray = this.boardArray;\n  $(\"input\").each(function (){\n    value = $(this).val();\n    pos = $(this).data(\"pos\");\n    i = pos[0] * 9 + pos[1];\n    if (value) {\n      boardArray[i].val = Number(value);\n    }\n  })\n  for (var j = 0; j < boardArray.length; j++) {\n    if (!boardArray[j].val) {\n      return false;\n    }\n  }\n  return true;\n};\n\nGame.prototype.winYet = function () {\n  var that = this;\n  var result = true;\n  $(\"input\").each(function (){\n    value = Number($(this).val());\n    pos = $(this).data(\"pos\");\n    i = pos[0] * 9 + pos[1];\n    if (value !== that.result[i]) {\n      result = false;\n    }\n  })\n  return result;\n};\n\nGame.prototype.notWinYet = function (callback) {\n  var that = this;\n  $(\"input\").each(function (){\n    value = Number($(this).val());\n    pos = $(this).data(\"pos\");\n    i = pos[0] * 9 + pos[1];\n    if (value !== that.result[i]) {\n      var michael = $(this);\n      michael.css(\"color\", \"red\");\n      michael.keydown(function() {\n        michael.css(\"color\", \"black\");\n      })\n    }\n  })\n  callback(\"The red number(s) is/are not correct!\")\n};\n\nfunction getRandomInt (min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction shuffle(ary) {\n  var j, x, i;\n  for (i = ary.length; i; i -= 1) {\n    j = Math.floor(Math.random() * i);\n    x = ary[i - 1];\n    ary[i - 1] = ary[j];\n    ary[j] = x;\n  }\n}\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game.js\n ** module id = 2\n ** module chunks = 0\n **/","var NodeTree = require('./nodeTree');\n\nfunction Board () {\n  this.root = new NodeTree();\n  this.root.pos = [0,0];\n  var rand = [1,2,3,4,5,6,7,8,9];\n  shuffle(rand);\n  this.root.val = rand.pop();\n  this.root.possibleVal = rand;\n  this.boardArray = [this.root];\n  // find node in boardArray:\n  // row = node.pos[0], col = node.pos[1]\n  // i = row * 9 + col, boardArray[i] === node\n}\n\n// create a node but do not set val for the node\nBoard.prototype.createNode = function (node) {\n  var currentNode = new NodeTree(node)\n  currentNode.setNode();\n  return currentNode;\n};\n\n// create the first row of board the node on pos [0,8] does not have val and\n// not included in boardArray.\nBoard.prototype.createFirstRow = function () {\n  var currentNode = this.root;\n  for (var i = 0; i < 7; i++) {\n    var temp = this.createNode(currentNode);\n    temp.setVal();\n    currentNode = temp;\n    this.boardArray.push(currentNode);\n  }\n  temp = this.createNode(currentNode);\n  currentNode = temp;\n  return currentNode;\n}\n\n// By backtrack algrithom to generate board\nBoard.prototype.createRestNode = function (node) {\n  var currentNode = node;\n  if ((currentNode.pos[0] === 8 && currentNode.pos[1] === 8) && currentNode.possibleVal.length > 0) {\n    currentNode.setVal();\n    this.boardArray.push(currentNode);\n    console.log(this.boardArray.length);\n    return this.boardArray;\n  }\n  if (currentNode.possibleVal.length === 0) {\n    this.boardArray.pop();\n    this.createRestNode(currentNode.prv)\n  }\n  else {\n    currentNode.setVal();\n    this.boardArray.push(currentNode);\n    var nextNode = this.createNode(currentNode);\n    this.createRestNode(nextNode);\n  }\n};\n\n// shuffle an array\nfunction shuffle(a) {\n  var j, x, i;\n  for (i = a.length; i; i -= 1) {\n    j = Math.floor(Math.random() * i);\n    x = a[i - 1];\n    a[i - 1] = a[j];\n    a[j] = x;\n  }\n}\n\nmodule.exports = Board;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/board.js\n ** module id = 3\n ** module chunks = 0\n **/","function NodeTree (node) {\n  this.prv = typeof node !== 'undefined' ?  node : null;\n  this.nxt = null;\n  this.pos = [];\n  this.val;\n  this.possibleVal = [];\n}\n\n// assign values for properties of node but this.val\nNodeTree.prototype.setNode = function() {\n  this.setLink();\n  this.setPos();\n  this.setPossibleVal();\n}\n\n// link node with previous node\nNodeTree.prototype.setLink = function () {\n  this.prv.nxt = this;\n};\n\n// set this.position\nNodeTree.prototype.setPos = function () {\n  var prv = this.prv;\n  var row, col;\n  var prvRow = this.prv.pos[0];\n  var prvCol = this.prv.pos[1];\n  if (prvCol === 8) {\n    row = (prvRow + 1);\n    col = 0;\n  }\n  else {\n    row = prvRow;\n    col = (prvCol + 1);\n  }\n  this.pos = [row, col];\n};\n\n// setVal by last number of possibleVal array\nNodeTree.prototype.setVal = function () {\n  this.val = this.possibleVal.pop();\n};\n\n// find exists row values\nNodeTree.prototype.rowVals = function () {\n  var result = [];\n  var currentNode = this.prv;\n  var col = this.pos[1];\n  for (var i = 0; i < col; i++) {\n    result.push(currentNode.val);\n    currentNode = currentNode.prv;\n  }\n  return result;\n};\n\n// find exists col values\nNodeTree.prototype.colVals = function () {\n  var result = [];\n  var currentNode = this.prv;\n  var col = this.pos[1];\n  while (currentNode && ((currentNode.pos[0] != 0) || (currentNode.pos[1] >= col))) {\n    if (currentNode.pos[1] === col) {\n      result.push(currentNode.val);\n    }\n    currentNode = currentNode.prv;\n  }\n  return result;\n};\n\n// find exists block values\nNodeTree.prototype.blockVals = function () {\n  var result = [];\n  var range = [[0,2],[3,5],[6,8]];\n  var row = this.pos[0];\n  var col = this.pos[1];\n  var currentNode = this.prv;\n  for (var i = 0; i < range.length; i++) {\n    if (row >= range[i][0] && row <= range[i][1]) {\n      var rangeRow = range[i];\n    }\n  }\n  for (var j = 0; j < range.length; j++) {\n    if (col >= range[j][0] && col <= range[j][1]) {\n      var rangeCol = range[j];\n    }\n  }\n  while (currentNode) {\n    if ((currentNode.pos[0] >= rangeRow[0] && currentNode.pos[0] <= rangeRow[1]) &&\n         currentNode.pos[1] >= rangeCol[0] && currentNode.pos[1] <= rangeCol[1]) {\n      result.push(currentNode.val);\n    }\n    currentNode = currentNode.prv;\n  }\n  return result;\n};\n\n//  find possibleVal which is an array construct by 1-9 which not in rowVals, colVals and blockVals\nNodeTree.prototype.setPossibleVal = function(rowVals, colVals, blockVals) {\n  var rowVals = this.rowVals();\n  var colVals = this.colVals();\n  var blockVals = this.blockVals();\n  var rand = [1,2,3,4,5,6,7,8,9];\n  shuffle(rand);\n  for (var i = 0; i < 9; i++) {\n    if ((!rowVals.includes(rand[i])) && (!colVals.includes(rand[i])) && (!blockVals.includes(rand[i]))) {\n      this.possibleVal.push(rand[i]);\n    }\n  }\n};\n\n// shuffle array\nfunction shuffle(array) {\n  var j, x, i;\n  for (i = array.length; i; i -= 1) {\n    j = Math.floor(Math.random() * i);\n    x = array[i - 1];\n    array[i - 1] = array[j];\n    array[j] = x;\n  }\n}\n\nmodule.exports = NodeTree;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/nodeTree.js\n ** module id = 4\n ** module chunks = 0\n **/","function Clock () {\n  this.startTime = new Date();\n}\n\nClock.prototype.parse = function() {\n  var diff = new Date(new Date() - this.startTime);\n  var hour = ((diff.getHours()-16)<10?'0':'') + (diff.getHours()-16)\n  var min = (diff.getMinutes()<10?'0':'') + diff.getMinutes()\n  var sec = (diff.getSeconds()<10?'0':'') + diff.getSeconds()\n  var display = hour + \":\" + min + \":\" + sec;\n  $(\"#clock\").text(display);\n}\n\nClock.prototype.tick = function() {\n  var that = this;\n  this.parse();\n  this.interval = setInterval(function() { that.parse() }, 500);\n}\n\nClock.prototype.stopClock = function() {\n  var that = this;\n\n  clearInterval(that.interval);\n}\n\nmodule.exports = Clock;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/clock.js\n ** module id = 5\n ** module chunks = 0\n **/"],"sourceRoot":""}